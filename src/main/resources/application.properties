spring.profiles.active=development

spring.kafka.bootstrap-servers=kafka:29092
spring.kafka.client-id=kafka-auto-setup

spring.kafka.consumer.acks=all
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.group-id=kafka-auto-setup
spring.kafka.consumer.key-deserializer=io.confluent.kafka.serializers.KafkaAvroDeserializer
spring.kafka.consumer.value-deserializer=io.confluent.kafka.serializers.KafkaAvroDeserializer

spring.kafka.producer.acks=all
spring.kafka.producer.key-serializer=io.confluent.kafka.serializers.KafkaAvroSerializer
spring.kafka.producer.value-serializer=io.confluent.kafka.serializers.KafkaAvroSerializer

spring.kafka.properties.ssl.endpoint.identification.algorithm=http
spring.kafka.properties.security.protocol=PLAINTEXT
spring.kafka.properties.sasl.mechanism=PLAIN
spring.kafka.properties.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username="${KAFKA_USER}" password="${KAFKA_PASSWORD}";
spring.kafka.properties.request.timeout.ms=20000
spring.kafka.properties.retry.backoff.ms=500
spring.kafka.properties.schema.registry.url=http://schema-registry:8081
spring.kafka.properties.basic.auth.credentials.source=USER_INFO
spring.kafka.properties.basic.auth.user.info=${KAFKA_USER}:${KAFKA_PASSWORD}
spring.kafka.properties.auto.register.schemas=false
spring.kafka.properties.specific.avro.reader=true
spring.kafka.properties.key.serializer=org.apache.kafka.common.serialization.StringSerializer